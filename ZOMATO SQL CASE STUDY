-----------------------
--ZOMATO CASE STUDY--
-----------------------
drop table if exists goldusers_signup;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date datetime); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'2017-09-22'),
(3,'2017-04-21');

drop table if exists users;
CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid, signup_date) 
VALUES
    (1, '2014-09-02'),
    (2, '2015-01-15'),
    (3, '2014-04-11');


drop table if exists sales;
CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid, created_date, product_id)
VALUES
    (1, '2017-04-19', 2),
    (3, '2019-12-18', 1),
    (2, '2020-07-20', 3),
    (1, '2019-10-23', 2),
    (1, '2018-03-19', 3),
    (3, '2016-12-20', 2),
    (1, '2016-11-09', 1),
    (1, '2016-05-20', 3),
    (2, '2017-09-24', 1),
    (1, '2017-03-11', 2),
    (1, '2016-03-11', 1),
    (3, '2016-11-10', 1),
    (3, '2017-12-07', 2),
    (3, '2016-12-15', 2),
    (2, '2017-11-08', 2),
    (2, '2018-09-10', 3);



drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);


-- Questions:

-- 1.what is total amount each customer spent on zomato ?
--- select a.userid , sum(b.price) as total_price
    from sales a 
    join product b 
    on a.product_id  = b.product_id 
    group by a.userid 

-- 2.How many days has each customer visited zomato?
--- select userid , count(distinct created_date) as no_of_days
    from sales
    group by userid;

-- 3.what was the first product purchased by each customer?
--- select  userid , created_date , product_name
    from (select a.* ,b.product_name ,
	rank() over(partition by userid order by created_date)as rnk
    from sales a 
    join product b 
    on a.product_id = b .product_id)a
    where rnk = 1;

-- 4.what is most purchased item on menu & how many times was it purchased by all customers ?
--- select userid , count(product_id) as no_of_time
    from sales 
    where product_id = (select product_id from Sales group by product_id order by count(product_id) desc limit 1 )
    group by userid

-- 5.which item was most popular for each customer?
--- with cte as 
    (select userid , product_id , count_of_products , 
    Dense_rank() over(partition by userid order by count_of_products desc ) rnk
    from (select distinct userid, product_id , count(Product_id) over(partition by userid , product_id ) as count_of_products
    from Sales)a)
    select * 
    from cte 
    where rnk = 1;

-- 6.which item was purchased first by customer after they become a member ?
--- with cte as
   (select * ,Rank() over(partition by userid  order by created_date) rnk
   from (select a.userid , a.created_date , b.signup_date , a.product_id
         from sales a
         join users b 
         on a.userid = b.userid and b.signup_date <= a.created_date) a )
   select userid , created_date ,signup_date,product_id
   from cte 
   where rnk = 1 ;

-- 7. what is total orders and amount spent for each member before they become a Gold member?
--- with cte as 
   (select c.* , p.product_name ,p.price
   from (select a.userid , a.product_id,a.created_date , b.gold_signup_date 
        from sales a 
        inner join goldusers_signup b 
        on a.userid = b.userid and a.created_date<=b.gold_signup_date) c 
   inner join  product p 
   on c.product_id = p.product_id) 
   select userid , count(*) as total_orders , sum(price)as total_amount 
   from cte 
   group by userid; 

-- 8. If buying each product generates points for eg 5rs=2 zomato point and each product has different purchasing points for eg for p1 5rs=1 zomato point,for p2 10rs= 5 zomato point and p3 5rs=1 zomato point  2rs =1zomato point,
---  with cte as 
     (select userid , product_id , sum(price) as total_price
     from (select a.*,b.price
    	   from sales a 
    	   join product b 
           on a.product_id  = b.product_id) x
   	   group by userid , product_id ) ,
    cte2  as (select * ,
             floor(case when product_id = 1 then total_price/5*1 
                        when product_id = 2 then total_price/10*5 
                        when product_id = 3 then total_price/5*1 
                        else 0 
                        end) as total_points
            from cte)  
          select userid ,sum(total_points*2.5) as total
          from cte2 
          group by userid;


-- 9. In the first year after a customer joins the gold program (including the join date ) 
-- irrespective of what customer has purchased earn 5 zomato points for every 10rs spent who earned more more 1 or 3 what int earning in first yr ? 1zp = 2rs
--- select x.* , y.price*0.5 as price
    from (SELECT a.userid, a.product_id, a.created_date, b.gold_signup_date 
         FROM sales a 
         INNER JOIN goldusers_signup b 
         ON a.userid = b.userid 
         AND a.created_date >= b.gold_signup_date 
         AND a.created_date <= DATE_ADD(b.gold_signup_date, INTERVAL 1 YEAR))x
    inner join product y 
    on x.product_id = y.product_id;



-- 10. rnk all transaction of the customers
---  select * ,rank() over(partition by userid order by created_date) as rnk from  sales; 


-- 11.rank all transaction for each member whenever they are zomato gold member for every non gold member transaction mark as na?
--- 
    WITH cte AS (
    SELECT *,
           RANK() OVER (PARTITION BY userid ORDER BY created_date DESC) AS rnk
    FROM (
        SELECT a.userid, a.product_id, a.created_date, b.gold_signup_date
        FROM sales a
        LEFT JOIN goldusers_signup b ON a.userid = b.userid AND a.created_date >= b.gold_signup_date
      ) x
      )
    SELECT userid,  product_id , created_date , gold_signup_date,
       CASE
           WHEN gold_signup_date IS NULL THEN 'na'
           ELSE CONVERT(rnk, CHAR)
       END AS final_rank
   FROM cte;
